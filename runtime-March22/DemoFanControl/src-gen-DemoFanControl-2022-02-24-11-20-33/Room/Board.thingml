/*****************************************************************************
 * Copyright (c) 2021 Intecs.
 *
 *    
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v2.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v20.html
 *
 * Contributors:
 *  Felicien Ihirwe
 *
 *****************************************************************************/
import "../util/_Datatypes.thingml"
import "../util/_Timer.thingml"
import "Room_subs/FAN.thingml"
import "Room_subs/Button.thingml"
import "Room_subs/LED.thingml"

thing fragment BoardMessages {
}

thing Board includes TimerMsgs,FANMessages,ButtonMessages,BoardMessages,LEDMessages { 
	required port toLED{
	sends LedON,LedOFF
	}
	required port toFAN{
	sends FanON,FanOFF
	}
	required port fromButton{
	receives press,release
	}

statechart BOARD_SM init 	IDLE{
state FanOnLedOFF{
	on entry 
	  do
		toLED!LedOFF()
		toFAN!FanON()
	  end
	
	transition -> FanOFFLedON event e: fromButton?release
	

	}
state FanOFFLedON{
	on entry 
	  do
		toLED!LedON()
		toFAN!FanOFF()
	  end
	
	transition -> FanOnLedOFF event e: fromButton?press
	

	}
state IDLE{
	on entry 
	  do
		toLED!LedON()
		toFAN!FanOFF()
	  end
	
	transition -> FanOFFLedON 
	

	}
}
}

protocol Timer;

configuration BoardApp{
	instance fANObj : FAN
	instance buttonObj : Button
	instance boardObj : Board
	instance lEDObj : LED
	connector boardObj.toLED => lEDObj.inLED
	connector boardObj.fromButton => buttonObj.toBoard
	connector boardObj.toFAN => fANObj.inFAN
	connector buttonObj.clock_tic over Timer
		set fANObj.PIN12 = 12
		set buttonObj.PIN0 = 0
		set lEDObj.PIN11 = 11
	}
